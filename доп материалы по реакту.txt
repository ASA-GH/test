посмотреть коменты к роликам там полно инфы

https://app.prntscr.com/en/
ссылка на прогу для скринов

сделать план схему приложения
++++++++++++++++++++++++++++++++++++++++
изучить лучше vs code
++++++++++++++++++++++++++++++++++++++++++++=

посмотреть про гидхаб
https://www.youtube.com/watch?v=Nk_ETOzyHPM
https://www.youtube.com/watch?v=qMnZz5TI1WY
команды
gitk --all&     (открыть графическую оболочку гита, чтобы позырить все коммиты)
ctrl + insert (копировать в буфер обмена) 
shift + insert (вставить из буфера обмена) 
git checkout commit-number (переключится на нужный комит)

сылка на репозиторий гидхаба с уроками
https://github.com/it-kamasutra/react-way-of-samurai

почитать про грид и другие способы разметки экрана

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

разобраться с npm и npx ошибки при установке и что делать)
sudo npm i react-router-dom -save
устоновилась с ошибками
i- instal
-save нужно для того чтоб появилась запись в package.json

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

эвалюция css статья
https://habr.com/ru/company/mailru/blog/319956/

БЭМ методология для верстки 
https://ru.bem.info/methodology/
поискать и другие подходы к верстки

Инструменты для веб-разработчиков гугл
разобраться с каждой вкладки

посмотреть подробно про props 

17 урок повторение материала 1 части
https://www.youtube.com/watch?v=Ps2TiA5dIKc&list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8&index=17

history api html5
почитать
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

themeforest social network
разобраться с оформлением
с помощью просмотра кода и инструментов разрободчика научится 
тырить элементы, цвета......

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

прочитать про map базавая функция js
25 и 26 урок и изучить как работают шаблоные строки

то такое 3-х уровневая архитектура UI-BLL-DAL

Например, скорее всего вы не встречали до сих пор (кроме моих видео))) определения для UI-BLL-DAL, но встречали MVC, MVP, MVVM... Все эти аббреавиатуры концептуально про одно и том же: ВАЖНО РАЗДЕЛЯТЬ ОТВЕТСТВЕННОСТИ и выносить их в разные части кода!!!

Гуглим быстренько, что такое "SOLID принципы" и что значит первая буква "S" в данной аббревиатуре!

Не увидел в комментариях описания разницы между render и component, но все же кому интересно - https://stackoverflow.com/questions/48150567/react-router-difference-between-component-and-render/48152635#48152635  По первому ответу хорошо расписано как преобразуется выражение и почему рендер быстрее. Но на практике(как по мне) стоит выбирать исходя из конкретной ситуации(есть-ли жизненный цикл у компоненты к примеру, пока это еще не разбирали в этом курсе).

30 урок повторение материала 2 части
https://www.youtube.com/watch?v=5js6RxcmxOA&list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8&index=31

концепция функционального програмирования
почитать про чистые функции

концепция callback

FLUX концепция

Приложение Heria PRO - http://heria.pro/
для варкаута для своего приложения

системы state management 

observer  (наблюдатель) - патерн почитать про патерны
про обработчики событий

справочник react

пересмотреть урок 36  Уроки, Курс React JS - про ООП поверхностно (зачем нам объекты)
https://www.youtube.com/watch?v=s1n24A2Xr0M&list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8&index=38&t=704s

почитать про bind 

пересмотреть 40 - React JS Практика - добавление Сообщения
https://www.youtube.com/watch?v=TUcn_vPHfxU&list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8&index=41
составить план как написать приложение с нуля
составить словарь терминов
 
почитать про redux

почитать про контейнерною компонету




